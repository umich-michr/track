spring.application.name=track

spring.jpa.open-in-view=false
# to avoid hibernate info message stating that jta is not configured. It's not configured because Spring's JpaTransactionManager autoconfigured and used.
logging.level.org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator=WARN
server.port=${SERVER_PORT:8080}

# Ensures that data.sql is executed after the JPA schema is created by Hibernate.
spring.jpa.defer-datasource-initialization=true
# Enable data-{platform}.sql execution after Hibernate schema creation
spring.sql.init.mode=embedded
#server.servlet.context-path=/track

spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Tomcat access logs to stdout
server.tomcat.accesslog.enabled=true
# Enhanced access log format
server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D "%{Referer}i" "%{User-Agent}i" %{X-Forwarded-For}i
server.tomcat.accesslog.directory=/dev
server.tomcat.accesslog.prefix=stdout
server.tomcat.accesslog.suffix=
server.tomcat.accesslog.file-date-format=
server.tomcat.accesslog.rotate=false
server.tomcat.accesslog.buffered=false

logging.level.org.apache.catalina=INFO
logging.level.org.apache.coyote=INFO
logging.level.org.apache.tomcat=INFO
# Hibernate SQL logging
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:true}
logging.level.org.hibernate.orm.jdbc.bind=${JDBC_BIND_LOGGING_LEVEL:WARN}
# to test if spring transactions are working as expected
logging.level.org.springframework.transaction=DEBUG

logging.level.edu.umich.med.michr.track=${TRACK_LOGGING_LEVEL:INFO}
#logging.level.org.springframework.web=${SPRING_WEB_LOGGING_LEVEL:INFO}
